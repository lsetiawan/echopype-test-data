name: Build on Ubuntu
on: push

env:
  RCLONE_DRIVE_SCOPE: drive
  RCLONE_CONFIG_GDRIVE_TYPE: drive
  TEMP_RCLONE_DIR: /opt/rclone_temp
  GDRIVE_ACCT_FILE: google-echopype.json

jobs:
  build:
    runs-on: ubuntu-latest
    defaults:
        run:
          shell: bash -l {0}
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Setup micromamba
        uses: mamba-org/setup-micromamba@v1
        with:
            environment-name: build-env
            create-args: >-
                python=3.10
                rclone
                pygithub
            cache-environment: true
            post-cleanup: 'all'
      - name: Check rclone version
        run: rclone version
      - name: Setup rclone temp dir
        run: |
            if [ -d "${{env.TEMP_RCLONE_DIR}}" ]
            then
                echo "${{env.TEMP_RCLONE_DIR}} found."
            else
                echo "creating ${{env.TEMP_RCLONE_DIR}}"
                mkdir ${{env.TEMP_RCLONE_DIR}}
            fi
      - name: Setup service account file env
        run: |
            echo "RCLONE_DRIVE_SERVICE_ACCOUNT_FILE=${{env.TEMP_RCLONE_DIR}}/${{env.GDRIVE_ACCT_FILE}}" >> $GITHUB_ENV
      - name: Get google json file
        run: |
            echo $GDRIVE_JSON | jq . > $RCLONE_DRIVE_SERVICE_ACCOUNT_FILE
        env:
            GDRIVE_JSON: ${{ secrets.GOOGLE_SERVICE_JSON}}
      - name: Check rclone listing
        run: |
            rclone ls gdrive:
        env:
            RCLONE_DRIVE_ROOT_FOLDER_ID: ${{ secrets.GDRIVE_FOLDER_ID }}
      - name: Clone test data
        run: |
            TEST_DATA_FOLDER=${{ github.workspace }}/test_data
            if [ -d $TEST_DATA_FOLDER ]
            then
                echo "Removing old test data"
                rm -rf $TEST_DATA_FOLDER
                echo "Copying new test data from google drive"
                # rclone copy gdrive: $TEST_DATA_FOLDER
                echo $TEST_DATA_FOLDER
                echo "Done"

                chmod -R ugoa+w $TEST_DATA_FOLDER
                ls -lah $TEST_DATA_FOLDER
            else
                echo "${TEST_DATA_FOLDER} not found"
            fi
